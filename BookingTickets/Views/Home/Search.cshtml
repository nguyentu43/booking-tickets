@model BookingTickets.Models.ViewModels.SearchVM
@{
    ViewContext.HttpContext.Items["Title"] = "Search";
}

<div class="card mb-md-3">
    <div class="card-body">
        <form method="get" class="form-inline">
            <input class="form-control mr-3 col-md-5" asp-for="Form.Keyword" placeholder="Type film name, cast, director"/>
            @Html.DropDownListFor(m => m.Form.SelectedGenre, 
           new SelectList(Model.Genres, "Id", "Name", Model.Form.SelectedGenre),
           "All Genres", new { @class = "form-control mr-3 mt-3 mt-md-0" })
            <button class="btn btn-primary mt-3 mt-md-0">Filter</button>
        </form>
    </div>
</div>

<div class="row">
    @foreach (var movie in Model.Movies)
    {
        <div class="col-12 my-2 col-md-6">
            <div class="d-flex border p-3 rounded movie">
                <img width="120" class="rounded" src="@movie.Cover" />
                <div class="ml-3 movie__info">
                    <div class="h4"><a asp-controller="Home" asp-action="MovieDetails" asp-route-id="@movie.Id">@movie.Title</a></div>
                    <div>Genres: @string.Join(", ", movie.Genres.Select(g => g.Name))</div>
                    <div>Duration: @movie.Duration mins</div>
                    <div>Director: @movie.Director</div>
                    <div>Cast: @movie.Cast</div>
                    <a asp-controller="Home" asp-action="MovieDetails" asp-route-id="@movie.Id" class="btn btn-primary mt-2">Booking</a>
                </div>
            </div>
        </div>
    }

    @if (Model.Movies.Count == 0)
    {
        <div class="text-center col-12 font-weight-bolder">No movies not found. Try another filter</div>
    }
    else
    {
        var baseQuery = $"?Form.PageSize={Model.Form.PageSize}&Form.Keyword={Model.Form.Keyword}&Form.SelectedGenre={Model.Form.SelectedGenre}";

        <div class="col-12 mt-3">
            <nav aria-label="Page navigation">
                <ul class="pagination">
                    @if (Model.Form.Page == 1)
                    {
                        <li class="page-item disabled"><a class="page-link" href="#">Previous</a></li>
                    }
                    else
                    {
                        <li class="page-item">
                            <a class="page-link" href="@baseQuery&Form.Page=@(Model.Form.Page - 1)">Previous</a>
                        </li>
                    }

                    @for (int i = 1; i <= Model.Form.PageTotal; ++i)
                    {
                        if (i == Model.Form.Page)
                        {
                            <li class="page-item active"><a class="page-link" href="#">@i</a></li>
                        }
                        else
                        {
                            <li class="page-item"><a class="page-link" href="@baseQuery&Form.Page=@i">@i</a></li>
                        }
                    }

                    @if (Model.Form.Page == Model.Form.PageTotal)
                    {
                        <li class="page-item disabled"><a class="page-link" href="#">Next</a></li>
                    }
                    else
                    {
                        <li class="page-item">
                            <a class="page-link" href="@baseQuery&Form.Page=@(Model.Form.Page + 1)">Next</a>
                        </li>
                    }
                </ul>
            </nav>
        </div>
    }
</div>
