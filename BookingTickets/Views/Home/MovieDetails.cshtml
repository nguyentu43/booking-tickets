@model BookingTickets.Models.ViewModels.MovieDetailVM
@inject Microsoft.AspNetCore.Identity.UserManager<ApplicationUser> UserManager
@{
    ViewContext.HttpContext.Items["Title"] = Model.Movie.Title;
    var hasLandscape = Model.Movie.LandscapeCover != null;
}

@if (hasLandscape)
{
    <div class="landscape-cover text-center">
        <img src="@Model.Movie.LandscapeCover" class="rounded"/>
    </div>
}

<div class="row mb-3 @(Model.Movie.LandscapeCover != null ? "has-landscape-cover" : "")">
    <div class="col-sm-5 col-md-4 col-xl-3 text-center">
        <img class="rounded" src="@Model.Movie.Cover" style="height: 300px" />
    </div>
    <div class="col-sm">
        <div class="h1">@Model.Movie.Title</div>
        @if (Model.Rates.Count > 0)
        {
            var avg = Math.Round(Model.Rates.Average(r => r.Value), 1);
            <h2 class="m-0">@avg <span class="fa fa-star text-warning"></span></h2>

        }
        <div>
            Genres:
            @foreach (var genre in Model.Movie.Genres)
                    {
                        var param = new Dictionary<string, string>();
                        param.Add("Form.SelectedGenre", genre.Id.ToString());
                <span class="badge badge-success">
                    <a asp-controller="Home" class="text-white" asp-action="Search" asp-all-route-data="param" >@genre.Name</a>
                </span>
            }
        </div>
        <div>Duration: <span class="badge badge-info">@Model.Movie.Duration mins</span></div>
        <div>Rated: <span class="badge badge-primary">@Model.Movie.Rated</span></div>
        <div>Release Date: <span class="badge badge-dark">@Model.Movie.ReleaseDate.ToShortDateString()</span></div>
        <div>Director: 
            <span class="badge badge-success">
                @{
                    var paramD = new Dictionary<string, string>();
                    paramD.Add("Form.Keyword", Model.Movie.Director);
                }
                <a asp-controller="Home" class="text-white" asp-action="Search" asp-all-route-data="paramD">@Model.Movie.Director</a>
            </span></div>
        <div>Cast: @foreach (var cast in Model.Movie.Cast.Split(",").ToList()) {
            var param = new Dictionary<string, string>();
            param.Add("Form.Keyword", cast);
            <span class="badge badge-info">
                <a asp-controller="Home" class="text-white" asp-action="Search" asp-all-route-data="param">@cast</a>
            </span>
        }</div>
        <div>Language: <span class="badge badge-info">@Model.Movie.Language</span></div>
    </div>
    
</div>

@if (Model.Movie.Trailer != null)
{
    <div class="card mb-3">
        <div class="card-header bg-primary text-white">Trailer</div>
        <div class="card-body d-flex">
            <iframe
            style="flex: 1; height: 400px"
        src="@Model.Movie.Trailer" 
        title="YouTube video player" frameborder="0" 
        allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
        </div>
    </div>
}

<div class="card mb-3">
    <div class="card-header bg-primary text-white">Description</div>
    <div class="card-body">
        @Html.Raw(Model.Movie.Description)
    </div>
</div>

<div class="card mb-3">
    <div class="card-header bg-success text-white">Booking Ticket</div>
    <div class="card-body" id="booking-ticket">
        <h3>Choose a Screening</h3>
        <section>
            <div class="my-3">
                <div>
                    <label class="mb-0 mr-2">Rooms</label>
                    @Html.DropDownList("roomId", new SelectList(Model.Rooms, "Id", "Name", "", "Cinema.Name"), "Select a room", new { @class = "form-control" })
                </div>
                <div class="mt-3 mt-md-0">
                    <label class="mb-0">Date</label>
                    <div class="calendar-container border rounded"></div>
                </div>
                <input name="movieId" type="hidden" value="@ViewContext.RouteData.Values["id"]" />
                <button id="btnSearchScreening" class="btn btn-primary mt-3">Search</button>
            </div>
            <div class="container-fluid">
                <div id="screening-list" class="row">
                </div>
            </div>
        </section>
        <h3>Choose Some Seat</h3>
        <section>
            <div id="wrapper-seat-list">
                <div id="seat-list">
                </div>
                <div class="d-flex my-3">
                    <div class="p-3 bg-success mr-2 rounded text-white">
                        VIP
                    </div>
                    <div class="p-3 bg-primary mr-2 rounded text-white">
                        NORMAL
                    </div>
                    <div class="p-3 bg-danger mr-2 rounded text-white">
                        BOOKED
                    </div>
                    <div class="p-3 bg-secondary rounded text-white">
                        NONE
                    </div>
                </div>
            </div>
        </section>
        <h3>Booking</h3>
        <section>
            @{ 

                var user = User.Identity?.Name != null ? await UserManager.FindByNameAsync(User.Identity?.Name) : null;
            }
            <div class="border border-info rounded p-2 mb-3">
                <div class="row" id="selected-seat-list">
                </div>
            </div>
            <h3 id="price-total"></h3>
            <form id="form-booking">
                <div class="form-group">
                    <label>Name</label>
                    <input class="form-control" name="Name" value="@user?.Name" placeholder="Enter your name" required />
                </div>
                <div class="form-group">
                    <label>Email</label>
                    <input class="form-control" name="Email" value="@user?.Email" type="email" required placeholder="Enter your email" />
                </div>
                <div class="form-group">
                    <label>Phone</label>
                    <input class="form-control" name="Phone" pattern="\d{10,15}" required placeholder="Enter your phone" />
                </div>
                <div class="form-group">
                    <label>Card Number</label>
                    <input class="form-control" name="CardNumber" required placeholder="Enter your card number" />
                </div>
                <div class="form-group">
                    <div class="input-group">
                        <input class="form-control" name="CardDate" type="month" required placeholder="Expired date" />
                        <input class="form-control" name="Cvc" required placeholder="CVC" />
                    </div>
                </div>
                <button type="submit" id="btnBooking" class="btn btn-danger">Booking@(user == null ? " without Login" : "" )</button>
                @if (user == null)
                {<a asp-controller="Auth" asp-action="Login" class="btn btn-primary">Login</a>}
            </form>
        </section>
    </div>
</div>

<div class="card mb-3">
    <div class="card-header bg-info text-white">Rates</div>
    <div class="card-body">
        <div class="container-fluid rate-list">
        @foreach(var rate in Model.Rates)
        {
             <div class="row border-bottom mb-1">
                <div class="col-12 col-md-2 text-center">
                    <img src="https://robohash.org/@(rate.Reservation.Customer.Name).png?set=set4&size=80x80" /><br/>
                    <h4><span class="badge badge-primary">@rate.Reservation.Customer.Name</span></h4>
                </div>
                <div class="col-12 col-md-10 mb-1">
                    <div class="moment-time" data-value="@rate.RatedDate"></div>
                    <div class="starrr starrr-readonly" data-value="@rate.Value"></div>
                    <div>@rate.Content</div>
                </div>
            </div>
            @section Styles{
                <link rel="stylesheet" href="~/lib/jquery-paginate/jquery.paginate.css" />
            }

            @section Scripts{
                <script src="~/lib/jquery-paginate/jquery.paginate.js"></script>
                <script>
                    jQuery('.rate-list').paginate({'perPage': 20});
                </script>
            }
        }
        </div>
        @if(Model.Rates.Count == 0)
        {
            <div>Dont have any rates</div>
        }
    </div>
</div>

