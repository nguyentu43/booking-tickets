@model BookingTickets.Models.ViewModels.MovieDetailVM
@inject Microsoft.AspNetCore.Identity.UserManager<ApplicationUser> UserManager
@{ 
    ViewContext.HttpContext.Items["Title"] = Model.Movie.Title;
}

<div class="mb-3 d-flex">
    <div>
        <img src="~/cover/@Model.Movie.Cover" style="height: 300px" />
    </div>
    <div class="ml-3">
        <div class="h1">@Model.Movie.Title</div>
        <div>Genres: <span class="badge badge-success">@string.Join(", ", Model.Movie.Genres.Select(g => g.Name))</span></div>
        <div>Duration: <span class="badge badge-info">@Model.Movie.Duration mins</span></div>
        <div>Rated: <span class="badge badge-primary">@Model.Movie.Rated</span></div>
        <div>Release Date: <span class="badge badge-dark">@Model.Movie.ReleaseDate.ToShortDateString()</span></div>
        <div>Director: <span class="badge badge-success"> @Model.Movie.Director</span></div>
        <div>Cast: @foreach (var cast in Model.Movie.Cast.Split(",").ToList()) { 
            <span class="badge badge-info">@cast</span>
        }</div>
        <div>Language: <span class="badge badge-info">@Model.Movie.Language</span></div>
    </div>
    
</div>

<div class="card mb-3">
    <div class="card-header bg-primary text-white">Description</div>
    <div class="card-body">
        @Html.Raw(Model.Movie.Description)
    </div>
</div>

<div class="card mb-3">
    <div class="card-header bg-success text-white">Booking Ticket</div>
    <div class="card-body" id="booking-ticket">
        <h3>Choose a Screening</h3>
        <section>
            <div class="my-3">
                <div>
                    <label class="mb-0 mr-2">Rooms</label>
                    @Html.DropDownList("roomId", new SelectList(Model.Rooms, "Id", "Name", "", "Cinema.Name"), "Select rooms", new { @class = "form-control" })
                </div>
                <div class="mt-3 mt-md-0">
                    <label class="mb-0">Date</label>
                    <input name="screeningDate" value="@DateTime.Now.ToString("MM/dd/yyyy")" class="form-control" />
                </div>
                <input name="movieId" type="hidden" value="@ViewContext.RouteData.Values["id"]" />
                <button id="btnSearchScreening" class="btn btn-outline-primary mt-3">Search</button>
            </div>
            <div class="container">
                <div id="screening-list" class="row">
                </div>
            </div>
        </section>
        <h3>Choose Some Seat</h3>
        <section>
            <div id="wrapper-seat-list">
                <div id="seat-list">
                </div>
                <div class="d-flex my-3">
                    <div class="p-3 bg-success mr-2 rounded text-white">
                        VIP
                    </div>
                    <div class="p-3 bg-primary mr-2 rounded text-white">
                        NORMAL
                    </div>
                    <div class="p-3 bg-danger mr-2 rounded text-white">
                        BOOKED
                    </div>
                    <div class="p-3 bg-secondary rounded text-white">
                        NONE
                    </div>
                </div>
            </div>
        </section>
        <h3>Booking</h3>
        <section>
            @{ 

                var user = User.Identity?.Name != null ? await UserManager.FindByNameAsync(User.Identity?.Name) : null;
            }
            <div class="border border-info rounded p-2 mb-3">
                <div class="row" id="selected-seat-list">
                </div>
            </div>
            <h3 id="totalPrice"></h3>
            <form id="formBooking">
                <div class="form-group">
                    <label>Name</label>
                    <input class="form-control" name="Name" value="@user?.Name" required />
                </div>
                <div class="form-group">
                    <label>Email</label>
                    <input class="form-control" name="Email" value="@user?.Email" type="email" required/>
                </div>
                <div class="form-group">
                    <label>Phone</label>
                    <input class="form-control" name="Phone" pattern="\d{10,15}" required />
                </div>
                <button type="submit" id="btnBooking" class="btn btn-outline-danger">Booking@(user == null ? " without Login" : "" )</button>
                @if (user == null) {<a asp-controller="Auth" asp-action="Login" class="btn btn-outline-primary">Login</a>}
            </form>
        </section>
    </div>
</div>